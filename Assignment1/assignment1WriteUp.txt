'@[a-zA-Z0-9_]{1,15}'
This regex was meant to catch any username that contained 1 to 15 allowed
characters. It worked, but also caught a lot of usernames with disallowed characters,
as well as usernames with disallowed sequences like "admin". It also allowed
usernames with over 15 characters--it just stopped matching for allowed characters
after 15 characters.

'^(?!.*(A|a)+(D|d)+(M|m)+(I|i)+(N|n)+)^(?!.*(T|t)+(W|w)+(I|i)+(T|t)+(T|t)+(E|e)+(R|r)+)@[a-zA-Z0-9_]{1,15}'
Here, we improved our original regex by rejecting strings with disallowed sequences like
"admin" and "twitter". We made sure to include both lowercase and uppercase versions of
each letter in this regex.

'^(?!.+@.*)^(?!.*[%$()\^\-~\.\*\!\?\#\&"].*)^(?!.*(A|a)+(D|d)+(M|m)+(I|i)+(N|n)+)^(?!.*(T|t)+(W|w)+(I|i)+(T|t)+(T|t)+(E|e)+(R|r)+)@[a-zA-Z0-9_]{1,15}'
Here we also got rid of disallowed symbols. This isn't as robust as it could be--
we didn't include many special symbols (like ¿§«»ω⊙¤) in our disallowed characters.
We also never fixed the regex so that it would only allow >=15 characters, a problem
that persisted since our first run.

'^(?!.+@.*)^(?!.*[%$()\^\-~\.\*\!\?\#\&"].*)^(?!.*(A|a)+(D|d)+(M|m)+(I|i)+(N|n)+)^(?!.*(T|t)+(W|w)+(I|i)+(T|t)+(T|t)+(E|e)+(R|r)+)@[a-zA-Z0-9_]{1,30}'
Here we used our Twitter regex but changed the length so that it would look at the
first 30 characters in the line. This runs into the same problem of allowing longer
sequences without disallowed characters

'^(?!.+@.*)^(?!.*[%$()\^\-~\*\!\?\#\&"].*)@[a-zA-Z0-9_\.]{1,30}'
Instagram handles allow the words 'admin' and 'twitter' in their handles as
well as some special symbols, so those filters were excluded. This led to a
perfect score on the particular test data. The length problem from above was
still not addressed.
